Q1. Why do we call Python as a general purpose and high-level programming language?

  ANS:    Python is a high-level programming language that is known for its ease of readability. Python’s syntax is designed to be easy to read and understand resulting in fewer coding steps for developers than imposed by Java or C++. This makes it a great choice for beginners who are just starting to learn programming. Python is also portable, meaning that it can run on any platform, including Windows, Mac, Linux, and even Raspberry Pi. In addition, Python supports development in AI which is a rapidly growing field, and Python is a language that is well-suited for development in this area. With its high level of readability and portability, Python is an excellent choice for high-level programming.

Q2. Why is Python called a dynamically typed language?
   ANS:   Python is both a strongly typed and a dynamically typed language.Strong typing means that variables do have a type and that the type matters when performing operations on a variable. Dynamic typing means that the type of the variable is determined only during runtime.

      Due to strong typing, types need to be compatible with respect to the operand when performing operations. For example Python allows one to add an integer and a floating point number, but adding an integer to a string produces error.

      Due to dynamic typing, in Python the same variable can have a different type at different times during the execution. Dynamic typing allows for flexibility in programming, but with a price in performance.

  	

Q3. List some pros and cons of Python programming language?
ANS:
The pros of Python:
   1. Python is easy to learn and read
    2.Python enhances productivity
    3.Python has a vast collection of libraries
    4.Python is free, open-source, and has a vibrant community
  5.Python is a portable programming language
   6.Python is an interpreted language
 
The cons of python programming language
    1.Python has speed limitations
    2.Python is not so strong with mobile computing
   3.Python can have runtime errors
   4.Python consumes a lot of memory space
   5.Python is not easy to test

	

Q4. In what all domains can we use Python?
 ANS:  
1.Machine learning / Artificial intelligence
2.Desktop GUI
3.Data analytics and data visualization 
4.Web development
5.Game development
6.Mobile app development
7.Embedded systems

     

Q5. What are variable and how can we declare them?
ANS:        
       A Python variable is a symbolic name that is a reference or pointer to an object. Once an object is assigned to a variable, you can refer to the object by that name. But the data itself is still contained within the object. For example:  a = 40.

Q6. How can we take an input from the user in Python?
   we use below methods for input
   1.  Python 3.6 uses the input() method.

   2.  Python 2.7 uses the raw_input() method.

Q7. What is the default datatype of the value that has been taken as an input using input() function?
  ANS:       
        Python input() function is used to take user input. By default, it returns the user input in form of a string.

Q8. What is type casting?

   Type Casting is the method to convert the variable data type into a certain data type in order to the operation required to be performed by users. In this article, we will see the various technique for typecasting.

There can be two types of Type Casting in Python –

 Implicit Type Conversion:
In this,  methods, Python converts data type into another data type automatically. In this process, users don’t have to involve in this process.

Explicit Type Casting:
In this method, Python need user involvement to convert the variable data type into certain data type in order to the operation required.

Mainly in type casting can be done with these data type function:

Int() : Int() function take float or string as an argument and return int type object.
float() : float() function take int or string as an argument and return float type object.
str() : str() function take float or int as an argument and return string type object.
        
      

Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?
ANS:
        We can take more than one input with following functions
       1.  Using split() method
         syntax  : input().split(separator, maxsplit)  
            Parameters -

The separator parameter breaks the input by the specified separator. By default, whitespace is the specified separator.
The split() method is used to split the Python string, but we can use it to get the multiple values.

       2. Using List Comprehension:
           We can also take values and convert them into the list using the map() method along with the split() method.

example: x = list(map(int, input("Enter multiple values: ").split()))  
print("List of students: ", x)  
          

Q10. What are keywords?
ANS:
         Python keywords are special reserved words that have specific meanings and purposes and can’t be used for anything but those specific purposes. These keywords are always available you’ll never have to import them into your code.


Q11. Can we use keywords as a variable? Support your answer with reason.
   ANS:
           Keywords are some predefined and reserved words in python that have special meanings. Keywords are used to define the syntax of the coding. The keyword cannot be used as an identifier, function, and variable name.

Q12. What is indentation? What's the use of indentaion in Python?
ANS:
    Indentation refers to the spaces at the beginning of a code line. Where in other programming languages the indentation in code is for readability only, the indentation in Python is very important. Python uses indentation to indicate a block of code.

Q13. How can we throw some output in Python?
ANS:
       check_output() is used to get the output of the calling program in python. It has 5 arguments; args, stdin, stderr, shell, universal_newlines. The args argument holds the commands that are to be passed as a string.

Q14. What are operators in Python?
ANS:
      In Python, operators are special symbols that designate that some sort of computation should be performed. The values that an operator acts on are called operands. Here is an example: 
>>a = 10 
>>b = 20 
>>a + b 
>>30. In this case, the + operator adds the operands a and b together.
       

Q15. What is difference between / and // operators?
   ANS:   '/' is the division operator. '//' is the floor division operator.

Q16. Write a code that gives following as an output.
        

iNeuroniNeuroniNeuroniNeuron
ANS: print("iNeuron"*4)

Q17. Write a code to take a number as an input from the user and check if the number is odd or even.
ANS: 

 a=int(input("enter num"))
if(a%2)==0:
  print("even")
else:
  print("odd)")

  

Q18. What are boolean operator?
ANS: 
          Boolean Operators are simple words (AND, OR, NOT or AND NOT) used as
conjunctions to combine or exclude keywords in a search, resulting in more focused and
productive results. This should save time and effort by eliminating inappropriate hits that
must be scanned before discarding. 

Q19. What will the output of the following?

1 or 0       >>op>>  1

0 and 0    >>op>>  0

True and False and True   >>op>> false

1 or 0 or 0   >>op>>  1

Q20. What are conditional statements in Python?
ANS: 
        Conditional statements help you to make a decision based on certain conditions. These conditions are specified by a set of conditional statements having boolean expressions which are evaluated to a boolean value of true or false.

python has 3 conditional statements :If_else, Elif, Nested If Statement

Q21. What is use of 'if', 'elif' and 'else' keywords?
ANS: 
        The if / elif / else structure is a common way to control the flow of a program, allowing you to execute specific blocks of code depending on the value of some data.

Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".
ANS: 
age=input("enter age")
if(age>=18):
  print("I can Vote")
else:
  print("I can't Vote")

Q23. Write a code that displays the sum of all the even numbers from the given list.
ANS: 
numbers = [12, 75, 150, 180, 145, 525, 50]

n=0
for i in numbers:
  if((i%2)==0):
    n=n+i
print(n)


Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.
ANS: 
a,b,c=input("enter number").split()
d=max(a,b,c)
print(d)

Q25. Write a program to display only those numbers from a list that satisfy the following conditions
ANS: 
The number must be divisible by five

If the number is greater than 150, then skip it and move to the next number

If the number is greater than 500, then stop the loop

numbers = [12, 75, 150, 180, 145, 525, 50]


for i in numbers:
  if((i%5)==0):
    if(i>150):
      continue
      if(i>500):
        break
    print(i)
